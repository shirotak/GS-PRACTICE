args=commandArgs(trailingOnly = T)
# import library
library(MutationalPatterns)
library(BSgenome)
ref_genome="hg38"
library(ref_genome, character.only = TRUE)
ref_genome="BSgenome.Hsapiens.UCSC.hg38"
library(ref_genome, character.only = TRUE)
# From MAF file make grande object
library(GenomicRanges)
maf=read.delim("~/Desktop/pancancer_TMB_MSI_IRS/Data/CPTAC23_fromGDC/maf_curated/01BR001.maf",comment.char="#")
# remove indels
snp=maf$Variant_Type=="SNP"
maf=maf[snp,]
# adjust status
if ( !grepl(pattern = "chr",x =maf$Chromosome[1])){
maf$Chromosome=paste0("chr",maf$Chromosome)
}
colnames(maf)[which( colnames(maf)=="Reference_Allele" )]="REF"
colnames(maf)[which( colnames(maf)=="Tumor_Seq_Allele2" )]="ALT"
# make grl
grl=makeGRangesListFromDataFrame(maf,
keep.extra.columns=TRUE,
ignore.strand=TRUE,
seqinfo=NULL,
seqnames.field=c("Chromosome"),
start.field="Start_Position",
end.field="End_Position",
strand.field="Strand",
starts.in.df.are.0based=FALSE,
split.field = "Tumor_Sample_Barcode",
names.field = "Hugo_Symbol")
# 96 mutational profile
mut_mat <- mut_matrix(vcf_list = grl, ref_genome = ref_genome)
cancer_signatures = read.table("/Users/takamatsushiro/Desktop/pancancer_TMB_MSI_IRS/Data/API/MCPred_git/lib/cosmic_v2_signatures.tsv",sep = "\t",header = TRUE)
# Match the order of the mutation types to MutationalPatterns standard
new_order = match(row.names(mut_mat), cancer_signatures$MutationType)
# Reorder cancer signatures dataframe
cancer_signatures = cancer_signatures[as.vector(new_order),]
# Add trinucletiode changes names as row.names
row.names(cancer_signatures) = cancer_signatures$MutationType
# Keep only 96 contributions of the signatures in matrix
cancer_signatures = as.matrix(cancer_signatures[,4:33])
#Fit mutation matrix to the COSMIC mutational signatures:
fit_res <- fit_to_signatures(mut_mat, cancer_signatures)
cancer_signatures$MutationType
new_order
# COSMIC mutational signatures
cancer_signatures = read.table( args[4],sep = "\t",header = TRUE)
cancer_signatures = read.table("/Users/takamatsushiro/Desktop/pancancer_TMB_MSI_IRS/Data/API/MCPred_git/lib/cosmic_v2_signatures.tsv",sep = "\t",header = TRUE)
cancer_signatures
cancer_signatures$MutationType
row.names(mut_mat)
cancer_signatures$MutationType
new_order = match(row.names(mut_mat), cancer_signatures$MutationType)
new_order
cancer_signatures
cancer_signatures[as.vector(new_order),]
# Reorder cancer signatures dataframe
cancer_signatures = cancer_signatures[as.vector(new_order),]
cancer_signatures$MutationType
# Add trinucletiode changes names as row.names
row.names(cancer_signatures) = cancer_signatures$MutationType
cancer_signatures
cancer_signatures = read.table("/Users/takamatsushiro/Desktop/pancancer_TMB_MSI_IRS/Data/API/MCPred_git/lib/cosmic_v2_signatures.tsv",sep = "\t",header = TRUE)
cancer_signatures[:,"MutationType"]
cancer_signatures[,"MutationType"]
cancer_signatures = read.table("/Users/takamatsushiro/Desktop/pancancer_TMB_MSI_IRS/Data/API/MCPred_git/lib/cosmic_v2_signatures.tsv",sep = "\t",header = TRUE)
cancer_signatures[,"MutationType"]
# Match the order of the mutation types to MutationalPatterns standard
new_order = match(row.names(mut_mat), cancer_signatures[,"MutationType"])
# Reorder cancer signatures dataframe
cancer_signatures = cancer_signatures[as.vector(new_order),]
cancer_signatures[,"MutationType"]
# Add trinucletiode changes names as row.names
row.names(cancer_signatures) = cancer_signatures[,"MutationType"]
# Keep only 96 contributions of the signatures in matrix
cancer_signatures= as.matrix(cancer_signatures[,4:33])
#Fit mutation matrix to the COSMIC mutational signatures:
fit_res <- fit_to_signatures(mut_mat, cancer_signatures)
fit_res$contribution
cancer_signatures = read.table("/Users/takamatsushiro/Desktop/pancancer_TMB_MSI_IRS/Data/API/MCPred_git/lib/cosmic_v2_signatures.tsv",sep = "\t",header = TRUE)
cancer_signatures[,"MutationType"]
cancer_signatures[,1]
cancer_signatures = read.table("/Users/takamatsushiro/Desktop/pancancer_TMB_MSI_IRS/Data/API/MCPred_git/lib/cosmic_v2_signatures.tsv",sep = "\t",header = TRUE)
new_order = match(row.names(mut_mat), cancer_signatures[,1])
ancer_signatures = cancer_signatures[as.vector(new_order),]
cancer_signatures[,4:33]
a="["A"", ""B", "C", "D"]"
a="['A','B','C', 'D']"
a
strsplit(a,"',")
a="['A', 'B', 'C', 'D']"
strsplit(a,"', ")
a_list=strsplit(a,"', ")
a_list[1]
a_list[1][1]
a_list[1][0]
a_list[1][1][1]
# Usage Rscript this.R -l vcfs.list
# argparse for option sample names
library(argparse)
parser=ArgumentParser(description="Make COSMIC contributions from multi VCF files")
parser$add_argument("-l","--input",required=T,help='list of path to input vcf files')
parser$add_argument("-l","--list",required=T,nargs="+",help='list of path to input vcf files')
parser$add_argument("-l","--list",required=T,nargs=+,help='list of path to input vcf files')
#
input_data="../../test/input/cancer_sample01.vcf"
genome_version="hg38"
# import library
library(MutationalPatterns)
library(BSgenome)
if (genome_version=="hg38"){ref_genome <-"BSgenome.Hsapiens.UCSC.hg38"}
library(ref_genome, character.only = TRUE)
# make grl
grl = read_vcfs_as_granges(vcf_files = input_data,
sample_names = sample_names,
genome = ref_genome)
sample_names="sample01" # or NULL
# make grl
grl = read_vcfs_as_granges(vcf_files = input_data,
sample_names = sample_names,
genome = ref_genome)
cosmic="../../lib/cosmic_v2_signatures.tsv"
# 96 mutational profile
mut_mat <- mut_matrix(vcf_list = grl, ref_genome = ref_genome)
# COSMIC reference signature
cancer_signatures = read.table(cosmic,sep = "\t",header = TRUE)
# Match the order of the mutation types to MutationalPatterns standard
new_order = match(row.names(mut_mat), cancer_signatures$MutationType)
# Reorder cancer signatures dataframe
cancer_signatures = cancer_signatures[as.vector(new_order),]
# Add trinucletiode changes names as row.names
row.names(cancer_signatures) = cancer_signatures$MutationType
# Keep only 96 contributions of the signatures in matrix
cancer_signatures = as.matrix(cancer_signatures[,4:ncol(cancer_signatures)])
# Fit mutation matrix to the COSMIC mutational signatures:
fit_res <- fit_to_signatures(mut_mat, cancer_signatures)
out_df=t(fit_res$contribution)
out_df
# R script for MAF file
input_data="../../test/input/TCGA_mutect2_random100_1.maf"
genome_version="hg38"
cosmic="../../lib/cosmic_v2_signatures.tsv"
sample_names=readLines("../../test/input/sample_names_10.list")
# import library
library(MutationalPatterns)
if (geneome_version=="hg38"){ref_genome <-"BSgenome.Hsapiens.UCSC.hg38"}
genome_version
if (genome_version=="hg38"){ref_genome <-"BSgenome.Hsapiens.UCSC.hg38"}
if (genome_version=="hg19"){ref_genome <-"BSgenome.Hsapiens.UCSC.hg19"}
library(ref_genome, character.only = TRUE)
# From MAF file make grande object
library(GenomicRanges)
maf=read.delim(args[1],comment.char="#")
maf=read.delim(input_data,comment.char="#")
# remove indels
snp=maf$Variant_Type=="SNP"
maf=maf[snp,]
# adjust status
if ( !grepl(pattern = "chr",x =maf$Chromosome[1])){
maf$Chromosome=paste0("chr",maf$Chromosome)
}
colnames(maf)[which( colnames(maf)=="Reference_Allele" )]="REF"
colnames(maf)[which( colnames(maf)=="Tumor_Seq_Allele2" )]="ALT"
# make grl
grl=makeGRangesListFromDataFrame(maf,
keep.extra.columns=TRUE,
ignore.strand=TRUE,
seqinfo=NULL,
seqnames.field=c("Chromosome"),
start.field="Start_Position",
end.field="End_Position",
strand.field="Strand",
starts.in.df.are.0based=FALSE,
split.field = "Tumor_Sample_Barcode",
names.field = "Hugo_Symbol")
# 96 mutational profile
mut_mat <- mut_matrix(vcf_list = grl, ref_genome = ref_genome)
GenomeInfoDb::genome(grl) = genome_version
# 96 mutational profile
mut_mat <- mut_matrix(vcf_list = grl, ref_genome = ref_genome)
# COSMIC mutational signatures
cancer_signatures = read.table( cosmic,sep = "\t",header = TRUE)
# Match the order of the mutation types to MutationalPatterns standard
new_order = match(row.names(mut_mat), cancer_signatures$MutationType)
# Reorder cancer signatures dataframe
cancer_signatures = cancer_signatures[as.vector(new_order),]
# Add trinucletiode changes names as row.names
row.names(cancer_signatures) = cancer_signatures$MutationType
# Keep only 96 contributions of the signatures in matrix
cancer_signatures = as.matrix(cancer_signatures[,4:33])
#Fit mutation matrix to the COSMIC mutational signatures:
fit_res <- fit_to_signatures(mut_mat, cancer_signatures)
out_df=t(fit_res$contribution)
out_df
# R script for a list of multiple VCF files
input_data="../test_path_to_cancer_samples_10.list"
genome_version="hg38"
sample_names=NULL # or
# sample_names=readLines("../../test/input/sample_names_10.list")
cosmic="../../lib/cosmic_v2_signatures.tsv"
# import library
library(MutationalPatterns)
if (genome_version=="hg38"){ref_genome <-"BSgenome.Hsapiens.UCSC.hg38"}
if (genome_version=="hg19"){ref_genome <-"BSgenome.Hsapiens.UCSC.hg19"}
library(ref_genome, character.only = TRUE)
# input_data
vcfs=readLines(input_data)
vcfs
# sample_names
if (is.null(sample_names)){
basenames = gsub(pattern = "^.*/",replacement="",vcfs)
sample_names = gsub(".vcf","",basenames)
}
sample_names
sample_names=NULL # or
sample_names=readLines("../../test/input/sample_names_10.list")
sample_names
# make grl
grl = read_vcfs_as_granges(vcf_files = vcfs,
sample_names = sample_names,
genome = ref_genome)
vcfs
# input_data
vcfs=readLines(input_data)
# set sample_names
if (is.null(sample_names)){
basenames = gsub(pattern = "^.*/",replacement="",vcfs)
sample_names = gsub(".vcf","",basenames)}
# make grl
grl = read_vcfs_as_granges(vcf_files = vcfs,
sample_names = sample_names,
genome = ref_genome)
# R script for a list of multiple VCF files
input_data="./test_path_to_vcf_files.list"
genome_version="hg38"
sample_names=NULL # or
#sample_names=readLines("../../test/input/sample_names_10.list")
cosmic="../../lib/cosmic_v2_signatures.tsv"
# input_data
vcfs=readLines(input_data)
# set sample_names
if (is.null(sample_names)){
basenames = gsub(pattern = "^.*/",replacement="",vcfs)
sample_names = gsub(".vcf","",basenames)}
# make grl
grl = read_vcfs_as_granges(vcf_files = vcfs,
sample_names = sample_names,
genome = ref_genome)
# 96 mutational profile
mut_mat <- mut_matrix(vcf_list = grl, ref_genome = ref_genome)
# COSMIC reference signature
cancer_signatures = read.table(cosmic,sep = "\t",header = TRUE)
# Match the order of the mutation types to MutationalPatterns standard
new_order = match(row.names(mut_mat), cancer_signatures$MutationType)
# Reorder cancer signatures dataframe
cancer_signatures = cancer_signatures[as.vector(new_order),]
# Add trinucletiode changes names as row.names
row.names(cancer_signatures) = cancer_signatures$MutationType
# Keep only 96 contributions of the signatures in matrix
cancer_signatures = as.matrix(cancer_signatures[,4:ncol(cancer_signatures)])
# Fit mutation matrix to the COSMIC mutational signatures:
fit_res <- fit_to_signatures(mut_mat, cancer_signatures)
out_df=t(fit_res$contribution)
out_df
# R script for MAF file
input_data="/Users/takamatsushiro/Desktop/pancancer_TMB_MSI_IRS/Data/Validate_Classification/coadread_dfci_2016/cbioportal/data_mutations_extended.maf"
genome_version="hg19"
#sample_names=NULL
cosmic="../../lib/cosmic_v2_signatures.tsv"
# import library
library(MutationalPatterns)
if (genome_version=="hg38"){ref_genome <-"BSgenome.Hsapiens.UCSC.hg38"}
if (genome_version=="hg19"){ref_genome <-"BSgenome.Hsapiens.UCSC.hg19"}
library(ref_genome, character.only = TRUE)
# From MAF file make grande object
library(GenomicRanges)
maf=read.delim(input_data,comment.char="#")
# remove indels
snp=maf$Variant_Type=="SNP"
maf=maf[snp,]
# adjust status
if ( !grepl(pattern = "chr",x =maf$Chromosome[1])){
maf$Chromosome=paste0("chr",maf$Chromosome)
}
colnames(maf)[which( colnames(maf)=="Reference_Allele" )]="REF"
colnames(maf)[which( colnames(maf)=="Tumor_Seq_Allele2" )]="ALT"
# make grl
grl=makeGRangesListFromDataFrame(maf,
keep.extra.columns=TRUE,
ignore.strand=TRUE,
seqinfo=NULL,
seqnames.field=c("Chromosome"),
start.field="Start_Position",
end.field="End_Position",
strand.field="Strand",
starts.in.df.are.0based=FALSE,
split.field = "Tumor_Sample_Barcode",
names.field = "Hugo_Symbol")
GenomeInfoDb::genome(grl) = genome_version
# 96 mutational profile
mut_mat <- mut_matrix(vcf_list = grl, ref_genome = ref_genome)
chromosomes = paste0('chr', c(1:22,'X'))
seqlevels(grl, pruning.mode = 'tidy') = chromosomes
GenomeInfoDb::genome(grl) = genome_version
# 96 mutational profile
mut_mat <- mut_matrix(vcf_list = grl, ref_genome = ref_genome)
chromosomes
maf
maf$Chromosome
maf$Chromosome in chromosomes
maf$Chromosome %in% chromosomes
maf[ maf$Chromosome %in% chromosomes ]
maf[maf$Chromosome %in% chromosomes,]
maf
maf[maf$Chromosome %in% chromosomes,]
# R script for MAF file
input_data="/Users/takamatsushiro/Desktop/pancancer_TMB_MSI_IRS/Data/Validate_Classification/coadread_dfci_2016/cbioportal/data_mutations_extended.maf"
genome_version="hg19"
#sample_names=NULL
cosmic="../../lib/cosmic_v2_signatures.tsv"
# import library
library(MutationalPatterns)
if (genome_version=="hg38"){ref_genome <-"BSgenome.Hsapiens.UCSC.hg38"}
if (genome_version=="hg19"){ref_genome <-"BSgenome.Hsapiens.UCSC.hg19"}
library(ref_genome, character.only = TRUE)
# From MAF file make grande object
library(GenomicRanges)
maf=read.delim(input_data,comment.char="#")
# remove indels
snp=maf$Variant_Type=="SNP"
maf=maf[snp,]
# adjust status
if ( !grepl(pattern = "chr",x =maf$Chromosome[1])){
maf$Chromosome=paste0("chr",maf$Chromosome)
}
chromosomes = paste0('chr', c(1:22,'X'))
maf = maf[maf$Chromosome %in% chromosomes,]
colnames(maf)[which( colnames(maf)=="Reference_Allele" )]="REF"
colnames(maf)[which( colnames(maf)=="Tumor_Seq_Allele2" )]="ALT"
# make grl
grl=makeGRangesListFromDataFrame(maf,
keep.extra.columns=TRUE,
ignore.strand=TRUE,
seqinfo=NULL,
seqnames.field=c("Chromosome"),
start.field="Start_Position",
end.field="End_Position",
strand.field="Strand",
starts.in.df.are.0based=FALSE,
split.field = "Tumor_Sample_Barcode",
names.field = "Hugo_Symbol")
GenomeInfoDb::genome(grl) = genome_version
# 96 mutational profile
mut_mat <- mut_matrix(vcf_list = grl, ref_genome = ref_genome)
?read_vcfs_as_granges
?read_vcfs_as_granges()
# R script for a list of multiple VCF files
input_data="./test_path_to_vcf_files.list"
genome_version="hg38"
sample_names=NULL # or
#sample_names=readLines("../../test_data/input/sample_names_10.list")
cosmic="../../lib/cosmic_v2_signatures.tsv"
# import library
library(MutationalPatterns)
if (genome_version=="hg38"){ref_genome <-"BSgenome.Hsapiens.UCSC.hg38"}
if (genome_version=="hg19"){ref_genome <-"BSgenome.Hsapiens.UCSC.hg19"}
library(ref_genome, character.only = TRUE)
# input_data
vcfs=readLines(input_data)
# set sample_names
if (is.null(sample_names)){
basenames = gsub(pattern = "^.*/",replacement="",vcfs)
sample_names = gsub(".vcf","",basenames)}
# make grl
grl = read_vcfs_as_granges(vcf_files = vcfs,
sample_names = sample_names,
genome = ref_genome,type = "snv")
# 96 mutational profile
mut_mat <- mut_matrix(vcf_list = grl, ref_genome = ref_genome)
# COSMIC reference signature
cancer_signatures = read.table(cosmic,sep = "\t",header = TRUE)
# Match the order of the mutation types to MutationalPatterns standard
new_order = match(row.names(mut_mat), cancer_signatures$MutationType)
# Reorder cancer signatures dataframe
cancer_signatures = cancer_signatures[as.vector(new_order),]
# Add trinucletiode changes names as row.names
row.names(cancer_signatures) = cancer_signatures$MutationType
# Keep only 96 contributions of the signatures in matrix
cancer_signatures = as.matrix(cancer_signatures[,4:ncol(cancer_signatures)])
# Fit mutation matrix to the COSMIC mutational signatures:
fit_res <- fit_to_signatures(mut_mat, cancer_signatures)
out_df=t(fit_res$contribution)
out_df
# R script for a list of multiple VCF files
input_data="./test_path_to_vcf_files.list"
genome_version="hg38"
sample_names=NULL # or
#sample_names=readLines("../../test_data/input/sample_names_10.list")
cosmic="../../lib/cosmic_v2_signatures.tsv"
# import library
library(MutationalPatterns)
if (genome_version=="hg38"){ref_genome <-"BSgenome.Hsapiens.UCSC.hg38"}
if (genome_version=="hg19"){ref_genome <-"BSgenome.Hsapiens.UCSC.hg19"}
library(ref_genome, character.only = TRUE)
# input_data
vcfs=readLines(input_data)
# set sample_names
if (is.null(sample_names)){
basenames = gsub(pattern = "^.*/",replacement="",vcfs)
sample_names = gsub(".vcf","",basenames)}
# make grl
grl = read_vcfs_as_granges(vcf_files = vcfs,
sample_names = sample_names,
genome = ref_genome)
# 96 mutational profile
mut_mat <- mut_matrix(vcf_list = grl, ref_genome = ref_genome)
# COSMIC reference signature
cancer_signatures = read.table(cosmic,sep = "\t",header = TRUE)
# Match the order of the mutation types to MutationalPatterns standard
new_order = match(row.names(mut_mat), cancer_signatures$MutationType)
# Reorder cancer signatures dataframe
cancer_signatures = cancer_signatures[as.vector(new_order),]
# Add trinucletiode changes names as row.names
row.names(cancer_signatures) = cancer_signatures$MutationType
# Keep only 96 contributions of the signatures in matrix
cancer_signatures = as.matrix(cancer_signatures[,4:ncol(cancer_signatures)])
# Fit mutation matrix to the COSMIC mutational signatures:
fit_res <- fit_to_signatures(mut_mat, cancer_signatures)
out_df2=t(fit_res$contribution)
out_df2
out_df
# R script for MAF file
input_data="/Users/takamatsushiro/Desktop/pancancer_TMB_MSI_IRS/Data/Validation/Validate_Classification/cbioportal/ccrcc_utokyo_2013/data_mutations_extended1.maf"
genome_version="hg19"
#sample_names=NULL
cosmic="../../lib/cosmic_v2_signatures.tsv"
# import library
library(MutationalPatterns)
if (genome_version=="hg38"){ref_genome <-"BSgenome.Hsapiens.UCSC.hg38"}
if (genome_version=="hg19"){ref_genome <-"BSgenome.Hsapiens.UCSC.hg19"}
library(ref_genome, character.only = TRUE)
# From MAF file make grande object
library(GenomicRanges)
maf=read.delim(input_data,comment.char="#")
maf=read.delim(input_data,comment.char="#",sep="\t")
